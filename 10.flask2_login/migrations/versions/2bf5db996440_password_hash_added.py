"""password_hash added

Revision ID: 2bf5db996440
Revises: cfaf1a86565b
Create Date: 2023-08-01 10:51:19.174874

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.orm import Session
from app import User
from werkzeug.security import generate_password_hash


# revision identifiers, used by Alembic.
revision = '2bf5db996440'
down_revision = 'cfaf1a86565b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 0. null 이 가능하게 생성
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=120), nullable=True))

    # 데이터 마이그레이션을 수행

    # 1. db에 접근한다
    bind = op.get_bind()
    session = Session(bind=bind)

    # 2. 올드 컬럼(passwrod) 컬럼에서 데이터를 가져온다
    users = session.query(User).all()
    print(users)

    # 3. 읽은 데이터를 내가 원하는 새로운 hash 포멧으로 변경한다
    for user in users:
        # 패스워드 해시 처리 해야함
        user.password_hash = generate_password_hash(user.password)
        print(f'{user}, {user.username}, {user.password}-> {user.password_hash}')

    session.commit()
    session.close()

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('password_hash')

    # ### end Alembic commands ###
